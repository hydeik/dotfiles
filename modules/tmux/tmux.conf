##
## ~/.config/tmux/tmux.conf
##
## The configuration file for Terminal MUltipleXer (tmux)
##

#
# NOTE:
#
#   | command           | alias  |
#   |-------------------+--------|
#   | set-option        | set    |
#   | set-window-option | setw   |
#   | bind-key          | bind   |
#   | unbind-key        | unbind |
#   | if-shell          | if     |
#   | run-shell         | run    |
#

#=============================
# General settings
#=============================

# Prefix key --- <C-z> [default: <C-b>]
set-option -g  prefix C-z
unbind-key C-b
# map prefix + prefix to send prefix key to terminal
bind-key   C-z send-prefix

# Default termtype. If $TERM is set, the value is overwritten.
# set-option -g  default-terminal "screen-256color"
set-option -g  default-terminal "tmux-256color"
# True Color
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -ga terminal-overrides ",alacritty:RGB"
# set-option the number of paste buffer (default: 20)
set-option -g  buffer-limit 50
# Maximum number of lines held in window history (default: 2000)
set-option -g  history-limit 10000

# Escape time in milliseconds (default: 500)
set-option -sg escape-time 20
# Update 'status-left' and 'status-right' every 5 second [default: 15]
set-option -g  status-interval 5
# Display time in milliseconds (default: 750)
set-option -g  display-time 5000
# Display time for the indicator in milliseconds (default: 1000)
set-option -g  display-panes-time 5000

# Enable mouse support
set-option -g  mouse on

# Start index of window/pane with 1 (default: 0)
set-option        -g base-index 1
set-window-option -g pane-base-index 1
# Reset window number when a window is closed.
set-option        -g renumber-windows on
# Disable automatic window renaming
set-window-option -g allow-rename off
# Aggressive window resize
set-window-option -g aggressive-resize on

# # support logging out and back in
# set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID_SSH_CONNECTION"

set-option -g focus-events on

#=============================
# Keybindings
#=============================

# Use emacs-like keybindings in tmux command prompt (prefix + :)
set-option -g status-keys emacs
# Use vi-like keybindings in copy mode
set-window-option -g mode-keys vi

# Unbind default keybinds, which are goint to be overritten.
unbind-key %    # split-window -h
unbind-key '"'  # split-window
unbind-key [    # copy-mode
unbind-key ]    # paste-buffer
unbind-key "'"  # select-window
unbind-key n    # next-window
unbind-key p    # previous-window

# Reload the tmux configuration file
bind-key R source-file @tmux_config_dir@/tmux.conf \;\
  display "[tmux] tmux.conf reloaded!"

# Split panes
bind-key | split-window -h -c "#{pane_current_path}" # horizontal
bind-key - split-window -v -c "#{pane_current_path}" # vertical

# Select windows (prev: 'M-S-[', next: 'M-S-]')
bind-key -n 'M-{' previous-window
bind-key -n 'M-}' next-window

# Select panse (prev: 'M-[', next: 'M-]')
bind-key -n M-[ select-pane -t :.-
bind-key -n M-] select-pane -t :.+

# See: https://github.com/mrjones2014/smart-splits.nvim
#
# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h'  'select-pane -L'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j'  'select-pane -D'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k'  'select-pane -U'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n M-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n M-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n M-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n M-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-M-h if -F "#{@pane-is-vim}" 'send-keys C-M-h' 'resize-pane -L 3'
bind-key -n C-M-j if -F "#{@pane-is-vim}" 'send-keys C-M-j' 'resize-pane -D 3'
bind-key -n C-M-k if -F "#{@pane-is-vim}" 'send-keys C-M-k' 'resize-pane -U 3'
bind-key -n C-M-l if -F "#{@pane-is-vim}" 'send-keys C-M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# for Mac OSX (make pbcopy/pbpaste and Vim's * register work.)
if-shell -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' \
  'set-option -g default-command "reattach-to-user-namespace -l $SHELL";'

# prefix + space to enter copy mode
bind-key Space copy-mode
# prefix + p to paste selection
bind-key p     paste-buffer

# --- Keybindings in copy-mode-vi
# unbind default bindings
unbind-key -T copy-mode-vi Enter  # send-keys -X copy-selection-and-cancel

# prefix + v to begin selection
bind-key -T copy-mode-vi  v send-keys -X begin-selection

yank="@tmux_config_dir@/clipboard-copy.sh"
# prefix + y: copy selected region
bind-key -T copy-mode-vi  y send-keys -X copy-pipe-and-cancel "$yank"
# prefix + Y: copy current line
bind-key -T copy-mode-vi  Y send-keys -X copy-line \;\
  run "tmux save-buffer - | $yank"
# prefix + D: copy from the cursor position to end of line
bind-key -T copy-mode-vi  D send-keys -X copy-end-of-line \;\
  run "tmux save-buffer - | $yank"
# prefix + A: append the selected region to clipboard
bind-key -T copy-mode-vi  A send-keys -X append-selection-and-cancel \;\
  run "tmux save-buffer - | $yank"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to
# "2" [default: 5 rows per tick].
bind-key -T copy-mode-vi WheelUpPane   select-pane \; send-keys -X -N 2 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

#============================
# Plugins
#============================

# --- Theme & status line components
set-option -g @catppuccin_flavor 'mocha'
set-option -g @catppuccin_flavor "frappe"
set-option -g @catppuccin_window_status_style "rounded"

set-option -g @prefix_highlight_fg 'black'
set-option -g @prefix_highlight_bg 'blue'
set-option -g @prefix_highlight_show_copy_mode 'on'
set-option -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set-option -g @prefix_highlight_show_sync_mode 'on'
set-option -g @prefix_highlight_sync_mode_attr 'fg=black,bg=magenta'
set-option -g @prefix_highlight_prefix_prompt 'Wait'
set-option -g @prefix_highlight_copy_prompt 'Copy'
set-option -g @prefix_highlight_sync_prompt 'Sync'
set-option -g @prefix_highlight_empty_prompt ' Tmux '
set-option -g @prefix_highlight_empty_attr 'fg=black,bg=brightgreen'

run-shell @catppuccin@/share/tmux-plugins/catppuccin/catppuccin.tmux

set-option -g   status on
set-option -g   status-interval 10
set-option -g   status-position top
set-option -g   status-right-length 100
set-option -g   status-left-length 100
set-option -g   status-left ""
set-option -g   status-right "#{E:@catppuccin_status_application}"
set-option -agF status-right "#{E:@catppuccin_status_cpu}"
set-option -ag  status-right "#{E:@catppuccin_status_session}"
set-option -ag  status-right "#{E:@catppuccin_status_uptime}"
set-option -agF status-right "#{E:@catppuccin_status_host}"
set-option -ag  status-right "#{prefix_highlight}"

run-shell @prefix_highlight@/share/tmux-plugins/prefix-highlight/prefix_highlight.tmux
run-shell @battery@/share/tmux-plugins/battery/battery.tmux
run-shell @cpu@/share/tmux-plugins/cpu/cpu.tmux

# --- Session management
set-option -g @resurrect-dir /Users/hide/.local/state/tmux-ressurect
set-option -g @resurrect-processes "ssh psql mysql sqlite3"
set-option -g @resurrect-strategy-vim "session"
set-option -g @resurrect-strategy-nvim "session"

run-shell @resurrect@/share/tmux-plugins/resurrect/resurrect.tmux

# --- Utils
run-shell @copycat@/share/tmux-plugins/copycat/copycat.tmux
run-shell @open@/share/tmux-plugins/open/open.tmux
