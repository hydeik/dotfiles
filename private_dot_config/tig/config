# Appearance
# ----------

# --- View settings
set blame-view  = id:yes,color file-name:auto author:full date:default line-number:yes,interval=1 text
set grep-view   = file-name:no line-number:yes,interval=1 text
set main-view   = line-number:no,interval=1 id:yes date:default author:full commit-title:yes,graph,refs,overflow=no
set refs-view   = line-number:no id:no date:default author:full ref commit-title
set stash-view  = line-number:no,interval=1 id:no date:default author:full commit-title
set status-view = line-number:no,interval=1 status:short file-name
set tree-view   = line-number:no,interval=1 mode author:full file-size date:default id:no file-name

# --- Pager based views
set pager-view  = line-number:yes,interval=1 text
set stage-view  = line-number:yes,interval=1 text
set log-view    = line-number:yes,interval=1 text
set blob-view   = line-number:yes,interval=1 text
set diff-view   = line-number:yes,interval=1 text:yes,commit-title-overflow=no

# --- UI display settings
set tab-size    = 4             # Number of spaces to use when expanding tabs

# --- Settings controlling how content is read from Git
set ignore-space = at-eol        # Enum: no, all, some, at-eol (diff)

# --- Diff options
set diff-context  = 5                 # Number of lines to show around diff changes (diff)
set diff-options  = -m --first-parent # User-defined options for `tig show` (git-diff)

# --- Misc
set ignore-case        = smart-case    # Enum: no, yes, smart-case
set split-view-height  = 67%           # Height of the bottom view for horizontal splits
set vertical-split     = auto          # Enum: horizontal, vertical, auto; Use auto to
                                       # switch to horizontal split when width allows it

# Key bindings
# ------------

# --- Vim-style key bindings
#     (https://github.com/jonas/tig/blob/master/contrib/vim.tigrc)
bind generic h scroll-left
bind generic j move-down
bind generic k move-up
bind generic l scroll-right

bind generic g  none
bind generic gg move-first-line
bind generic gj next
bind generic gk previous
bind generic gp parent
bind generic gP back
bind generic gn view-next

bind main    G move-last-line
bind generic G move-last-line

bind generic <C-f> move-page-down
bind generic <C-b> move-page-up

bind generic v  none
bind generic vm view-main
bind generic vd view-diff
bind generic vl view-log
bind generic vt view-tree
bind generic vb view-blob
bind generic vx view-blame
bind generic vr view-refs
bind generic vs view-status
bind generic vu view-stage
bind generic vy view-stash
bind generic vg view-grep
bind generic vp view-pager
bind generic vh view-help

bind generic o  none
bind generic oo :toggle sort-order
bind generic os :toggle sort-field
bind generic on :toggle line-number
bind generic od :toggle date
bind generic oa :toggle author
bind generic og :toggle line-graphics
bind generic of :toggle file-name
bind generic op :toggle ignore-space
bind generic oi :toggle id
bind generic ot :toggle commit-title-overflow
bind generic oF :toggle file-filter
bind generic or :toggle commit-title-refs

bind generic @  none
bind generic @j :/^@@
bind generic @k :?^@@
bind generic @- :toggle diff-context -1
bind generic @+ :toggle diff-context +1

bind status  u  none
bind stage   u  none
bind generic uu status-update
bind generic ur status-revert
bind generic um status-merge
bind generic ul stage-update-line
bind generic us stage-split-chunk

bind generic c  none
bind generic cc !git commit
bind generic ca !?@git commit --amend --no-edit

bind generic K view-help
bind generic <C-w><C-w> view-next

# Misc
# Rebind view-help
bind generic ?      view-help
bind generic <C-R>  refresh

# --- User defind commands
# M: merge branch
bind main   M       ?git merge %(branch)
bind diff   M       ?git merge %(branch)
bind refs   M       ?git merge %(branch)
# M-m: merge commit
bind main   <Esc>m  ?git merge %(commit)
bind diff   <Esc>m  ?git merge %(commit)

# R: rebase
bind main   R       ?git rebase -i %(branch)
bind diff   R       ?git rebase -i %(branch)
bind refs   R       ?git rebase -i %(branch)
bind refs   <Esc>r  ?git rebase -i %(commit)
bind refs   <Esc>r  ?git rebase -i %(commit)
